package aln.malware_guardian
# Block submission of files matching malware/implant heuristics (by file name or entropy)
deny[msg] {
  some file
  file := input.changes[_].file
  file =~ ".*\.exe$"          # Block new or modified .exe files
  msg := sprintf("Binary executable '%v' blocked by malware_guardian.", [file])
}
deny[msg] {
  some file
  file := input.changes[_].file
  file =~ ".*(impl|shell|payload|dropper).*"
  msg := sprintf("Suspicious filename pattern '%v' detected.", [file])
}
# Detect and block malicious supply-chain patterns (like encoded scripts in configs)
deny[msg] {
  input.changes[_].diff[_].content =~ "(eval\(|base64_decode|fromCharCode\()"
  msg := "Potential obfuscated/malicious code pattern detected. Commit rejected."
}
# Mitigate malicious Rego: explicitly deny policy files trying to exfiltrate env/input/context
deny[msg] {
  regex.match("http\.send\(|opa\.runtime\(\)\.env|input.*http\.send", input.changes[_].diff[_].content)
  msg := "Dangerous Rego pattern (exfiltration risk) found. Denied by malware_guardian."
}
