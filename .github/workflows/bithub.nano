- name: Notify agentic.ai (success)
  if: success()
  run: .bit/loaders/agentic-dispatch.sh preflight.ok

- name: Notify agentic.ai (failure)
  if: failure()
  run: .bit/loaders/agentic-dispatch.sh preflight.fail
```

Optional: append a ledger entry on every dispatch:

```bash
echo "{\"ts\":\"$(date -Iseconds)\",\"event\":\"$EVENT\",\"run\":\"${GITHUB_RUN_ID:-local}\"}" >> .bithub/ledger/agentic.log
```


---

### Next steps checklist

- **Create the contract**
  - Add .bit/linking.repo.bit.yml as shown above.

- **Fix current breakages**
  - Rename “.github\workflows\humor-bot-ai-loop.yml” to .github/workflows/humor-bot-ai-loop.yml.
  - Add scripts/resync-ingestion.sh (or an alternate path) and set exec bit.

- **Adopt the guardrails**
  - Add agentic-preflight.yml and resync-ingestion-guard.yml.
  - Add .github/actions/assert-files composite action.

- **Enable optional dispatch**
  - Add .bit/loaders/agentic-dispatch.sh and set AGENTIC_ENDPOINT/AGENTIC_TOKEN as repo secrets if you want external orchestration.

If you share how resync should behave in your universe (sources, filters, side effects), I’ll tailor the stub script and the guard to your exact flow and link it into your evolutionous.loop.aln.
