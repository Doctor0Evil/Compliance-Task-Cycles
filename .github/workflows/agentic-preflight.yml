name: Agentic Preflight

on:
  pull_request:
  push:
    branches: [ main, trunk, develop ]
    paths:
      - ".bit/**"
      - ".github/**"
      - "scripts/**"
      - "tools/**"
      - "workflows/**"

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install yq
        run: sudo apt-get update && sudo apt-get install -y yq

      - name: Read linking repo contract
        id: cfg
        run: |
          set -euo pipefail
          if [[ ! -f .bit/linking.repo.bit.yml ]]; then
            echo "Missing .bit/linking.repo.bit.yml"; exit 1
          fi
          yq '.' .bit/linking.repo.bit.yml > /dev/null

      - name: Assert required scripts exist
        run: |
          set -euo pipefail
          FAIL=0
          LOG=".bithub/ledger/preflight.log"
          mkdir -p "$(dirname "$LOG")"
          echo "=== Preflight $(date -Iseconds) ===" | tee -a "$LOG"
          mapfile -t IDS < <(yq -r '.contract.required_scripts[].id' .bit/linking.repo.bit.yml)
          for id in "${IDS[@]}"; do
            echo "[CHECK] $id" | tee -a "$LOG"
            mapfile -t PREFER < <(yq -r ".contract.required_scripts[] | select(.id==\"$id\").prefer[]?" .bit/linking.repo.bit.yml)
            mapfile -t ALT < <(yq -r ".contract.required_scripts[] | select(.id==\"$id\").alternates[]?" .bit/linking.repo.bit.yml)
            FOUND=""
            for p in "${PREFER[@]}" "${ALT[@]}"; do
              [[ -n "$p" && -f "$p" ]] && { FOUND="$p"; break; }
            done
            if [[ -z "$FOUND" ]]; then
              echo "❌ Missing script for id=$id" | tee -a "$LOG"
              FAIL=1
            else
              echo "✅ Found $FOUND" | tee -a "$LOG"
              # Ensure exec bit
              if [[ ! -x "$FOUND" ]]; then
                echo "ℹ️ Setting exec bit on $FOUND"
                chmod +x "$FOUND" || true
              fi
            fi
          done
          exit $FAIL

      - name: Detect backslash-named workflow files
        run: |
          set -euo pipefail
          BAD=$(ls -1A | grep -F ".github\\workflows" || true)
          if [[ -n "$BAD" ]]; then
            echo "❌ Found misnamed workflow file using backslashes: $BAD"
            echo "Rename to .github/workflows/<name>.yml"
            exit 1
          fi

      - name: Report to ledger
        if: always()
        run: |
          LOG=".bithub/ledger/preflight.log"
          mkdir -p "$(dirname "$LOG")"
          echo "status=${{ job.status }} ts=$(date -Iseconds)" >> "$LOG"
