name: ALN Unified Pipeline

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "*/30 * * * *"   # every 30 mins for high‑frequency sync
  workflow_dispatch:

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Self‑healing + live‑sync API docs
      - name: Ensure & Sync API Reference
        shell: pwsh
        run: |
          $docPath  = "docs/api-reference.md"
          $specPath = "schemas/openapi.yaml"

          if (-not (Test-Path (Split-Path $docPath))) {
            New-Item -ItemType Directory -Force -Path (Split-Path $docPath) | Out-Null
          }

          npm install -g widdershins

          if (Test-Path $specPath) {
            widdershins $specPath --language_tabs "http:HTTP" --summary --search false --outfile tmp_api.md
            $header = @(
              "# ALN Programming Language – API Reference",
              "_Last updated: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')_",
              "_Compliance hash: $(git rev-parse HEAD)_",
              "## Overview",
              "Complete, audit-ready reference for all ALN public APIs."
            )
            $body = Get-Content tmp_api.md -Encoding UTF8
            @($header; $body) | Set-Content -Path $docPath -Encoding UTF8
          }
          elseif (-not (Test-Path $docPath)) {
            @"
# ALN Programming Language – API Reference

_Last updated: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')_  
_Compliance hash: $(git rev-parse HEAD)_

## Overview
Complete, audit-ready reference for all ALN public APIs.
"@ | Set-Content -Path $docPath -Encoding UTF8
          }

          git fetch origin main
          if (git diff origin/main -- $docPath) {
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add $docPath
            git commit -m "docs(api): auto-sync api-reference.md from spec [ci skip]" || true
            git push || true
          }
          else {
            Write-Host "API reference already up-to-date — no commit."
          }

      # Upload doc as artifact for audit trail
      - name: Upload API Reference artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-reference-${{ github.run_id }}
          path: docs/api-reference.md

      # Continue with bootstrap → remediation → image build
      - name: Run bootstrap
        shell: pwsh
        run: ./scripts/bootstrap.ps1

      - name: Remediation
        shell: pwsh
        run: ./scripts/remediate.ps1

      - name: Build Docker image
        run: docker build -t aln:${{ github.sha }} .

      - name: Preprocess yaml
        uses: valentin-barbotin/preprocess_yaml@v1.0.2
        with:
          file: .github/workflows/aln_bootstrap.yml
          output: .github/workflows/aln_bootstrap.processed.yml
