runner:
  id: "aln://bitrunners/phoenix/default"
  version: "1.0.0"
  personas: ["strict","hybrid"]
  capabilities:
    langs: ["node18","python3.11","java17","dotnet6"]
    build: ["pack","test","bundle"]
    artifacts: ["tar.gz","zip"]
  policies:
    dir: ".bithub/policies"
    enforce_strict: true
  cache:
    primary: "actions-cache"
    secondary:
      enabled: true
      driver: "ns"          # ns | s3 | ipfs
      ns_roots: [".bithub/cache"]
      s3_bucket: ""         # if driver == s3
      s3_region: "us-west-2"
      ipfs_gateway: "https://ipfs.io"
    keys:
      salt: "v1"            # bump to invalidate globally
  ledger:
    path: ".bithub/ledger/runner.log"

                - name: Cache
  uses: actions/cache@v4.2.4
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false
          
