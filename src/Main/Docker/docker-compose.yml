```yaml
version: '3.8'
services:
  aln-core:
    build: .
    container_name: aln-core
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./app//app/aln-pos/data
      - ./app/logs:/app/aln-pos/logs
      - ./app/config:/app/aln-pos/config
      - ./app/backup:/app/aln-pos/backup
      - ./app/secure:/app/aln-pos/secure
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MILVUS_URI=milvus:19530
      - PROMETHEUS_URL=http://prometheus:9090
      - GRAFANA_URL=http://grafana:3000
      - LOGGING_BACKEND=loki:3100
      - ALN_ENVIRONMENT=production
      - COMPLIANCE_MODE=full
      - COMPLIANCE_SCORE_THRESHOLD=98.5
      - SYSTEM_HEALTH_THRESHOLD=95.0
    depends_on:
      - db
      - redis
      - kafka
      - milvus
      - prometheus
      - grafana
      - loki
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  db:
    image: postgres:15
    container_name: aln-db
    environment:
      POSTGRES_USER: aln_user
      POSTGRES_PASSWORD: aln_password
      POSTGRES_DB: aln_db
    volumes:
      - ./db//var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aln_user"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  redis:
    image: redis:7
    container_name: aln-redis
    volumes:
      - ./redis/data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  kafka:
    image: bitnami/kafka:3.4
    container_name: aln-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: aln-zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    healthcheck:
      test: ["CMD", "echo ruok | nc localhost 2181"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  milvus:
    image: milvusdb/milvus:v2.4.11
    container_name: aln-milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - ./milvus//var/lib/milvus
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    depends_on:
      - etcd
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19530/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  etcd:
    image: bitnami/etcd:3.5
    container_name: aln-etcd
    environment:
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2379/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  minio:
    image: minio/minio:RELEASE.2023-07-12T22-05-47Z
    container_name: aln-minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./minio//data
    command: minio server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    container_name: aln-prometheus
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus//prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  grafana:
    image: grafana/grafana:10.2.0
    container_name: aln-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana//var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=aln_password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  loki:
    image: grafana/loki:2.7.0
    container_name: aln-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki//loki
    command: -config.file=/etc/loki/loki-config.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  jaeger:
    image: jaegertracing/all-in-one:1.33
    container_name: aln-jaeger
    ports:
      - "16686:16686"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16686/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
```
