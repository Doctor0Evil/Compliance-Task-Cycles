(defpackage :malware.protection
  (:use :cl)
  (:export :validate-integrity :run-protection-checks))

(in-package :malware.protection)

(defparameter *required-keys*
  '(:scan-mode :quarantine-path :audit-log :override-hooks :alternate-filter))

(defparameter *default-config*
  '(:scan-mode :deep
    :quarantine-path "logs/quarantine"
    :audit-log "logs/malware.audit.log"
    :override-hooks ("filters/alternate.filter.lisp")
    :alternate-filter :enabled))

(defun validate-integrity (&optional (config-path "config/malware.protection.schema.lisp"))
  "Ensure schema file exists and contains all required keys."
  (if (probe-file config-path)
      (let ((plist (with-open-file (in config-path) (read in))))
        (dolist (k *required-keys*)
          (format t " - Key ~a: [~a]~%" k (if (getf plist k :not-found) "OK" "MISSING"))))
      (format t "[ERROR] Schema file not found: ~a~%" config-path)))

(defun run-protection-checks ()
  (validate-integrity)
  (format t "[Malware Protection] Schema validated.~%"))
